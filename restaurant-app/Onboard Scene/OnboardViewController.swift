//
//  OnboardViewController.swift
//  restaurant-app
//
//  Created by Jorge Luis Perales on 9/28/19.
//  Copyright (c) 2019 Jorge Luis Perales. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftyOnboard

protocol OnboardDisplayLogic: class {
  
}

class OnboardViewController: UIViewController, OnboardDisplayLogic {
  var interactor: OnboardBusinessLogic?
  var router: (NSObjectProtocol & OnboardRoutingLogic & OnboardDataPassing)?
  
  var titleArray = [
    "Welcome to Foodie!",
    "Explore restaurants!",
    "Find popular places to eat!"
  ]
  var subtitleArray = [
    "Foodie is your universal app that will help you find great food for every mood.",
    "Look for restaurants wherever you are! Whether you are in your hometown or in vacation in another city, you'll always be able to search for new places.",
    "We use your location to provide the best places around you. Now we'll ask for your permission to use it."
  ]
  
  var swiftyOnboard: SwiftyOnboard!
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = OnboardInteractor()
    let presenter = OnboardPresenter()
    let router = OnboardRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    self.setupOnboard()
  }
  
  override var preferredStatusBarStyle: UIStatusBarStyle {
    return .lightContent
  }
  
  func setupOnboard() {
    swiftyOnboard = SwiftyOnboard(frame: view.frame, style: .light)
    view.addSubview(swiftyOnboard)
    swiftyOnboard.dataSource = self
    swiftyOnboard.delegate = self
  }
  
  // MARK: OnboardDisplayLogic
  
  @objc func skipButtonPressed() {
    swiftyOnboard.goToPage(index: 2, animated: true)
  }
  
  @objc func continueButtonPressed(sender: UIButton) {
    let index = sender.tag + 1
    if index <= 2 {
      swiftyOnboard.goToPage(index: index, animated: true)
    } else {
      // TODO: request user location
      self.interactor?.setOnboardFinished()
      self.router?.routeToHomeViewController()
    }
  }
  
}

extension OnboardViewController: SwiftyOnboardDelegate, SwiftyOnboardDataSource {
  func swiftyOnboardNumberOfPages(_ swiftyOnboard: SwiftyOnboard) -> Int {
    return 3
  }
  
  func swiftyOnboardPageForIndex(_ swiftyOnboard: SwiftyOnboard, index: Int) -> SwiftyOnboardPage? {
    let view = SwiftyOnboardPage()
    
    // TODO: Add images to onboarding experience
    
    view.title.font = UIFont(name: "HelveticaNeue-Medium", size: 28)
    view.subTitle.font = UIFont(name: "HelveticaNeue-Light", size: 20)
    
    view.title.text = self.titleArray[index]
    view.subTitle.text = self.subtitleArray[index]
    
    return view
  }
  
  func swiftyOnboardBackgroundColorFor(_ swiftyOnboard: SwiftyOnboard, atIndex index: Int) -> UIColor? {
    return .foodyOrange
  }
  
  func swiftyOnboardViewForOverlay(_ swiftyOnboard: SwiftyOnboard) -> SwiftyOnboardOverlay? {
    let overlay = SwiftyOnboardOverlay()
    
    overlay.skipButton.addTarget(self, action: #selector(skipButtonPressed), for: .touchUpInside)
    overlay.continueButton.addTarget(self, action: #selector(continueButtonPressed), for: .touchUpInside)
    
    overlay.continueButton.titleLabel?.font = UIFont(name: "HelveticaNeue-Bold", size: 20)
    overlay.skipButton.titleLabel?.font = UIFont(name: "HelveticaNeue-Medium", size: 20)
    
    overlay.continueButton.setTitleColor(.white, for: .normal)
    overlay.skipButton.setTitleColor(.white, for: .normal)
    
    return overlay
  }
  
  func swiftyOnboardOverlayForPosition(_ swiftyOnboard: SwiftyOnboard, overlay: SwiftyOnboardOverlay, for position: Double) {
    let page = Int(round(position))
    overlay.pageControl.currentPage = page
    overlay.continueButton.tag = page
    
    if page == 0 || page == 1 {
      overlay.continueButton.setTitle("Continue", for: .normal)
      overlay.skipButton.setTitle("Skip", for: .normal)
      overlay.skipButton.isHidden = false
    } else {
      overlay.continueButton.setTitle("Get Started!", for: .normal)
      overlay.skipButton.isHidden = true
    }
  }
  
}
