//
//  HomeInteractor.swift
//  restaurant-app
//
//  Created by Jorge Luis Perales on 9/28/19.
//  Copyright (c) 2019 Jorge Luis Perales. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
  func getCity(lat: Double, lon: Double, city: String)
  func verifySupportedCountry(_ country: String) -> Bool
  func getLocalCityId() -> String?
  func getCollections()
}

protocol HomeDataStore {
  //var name: String { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
  var presenter: HomePresentationLogic?
  var worker = HomeWorker()
  //var name: String = ""
  
  // MARK: HomeBusinessLogic
  
  func getCity(lat: Double, lon: Double, city: String) {
    self.presenter?.presentActivityIndicator(true)
    worker.getCity(lat, lon, city) { (data, error) in
      self.presenter?.presentActivityIndicator(false)
      if error == nil  {
        guard let cities = data as? [City] else { return }
        self.presenter?.presentCities(cities)
      } else {
        self.presenter?.presentError("Error", error!.localizedDescription)
      }
    }
  }
  
  func verifySupportedCountry(_ country: String) -> Bool {
    return worker.isCountrySupported(country)
  }
  
  func getLocalCityId() -> String? {
    return worker.getCityId() != "" ? worker.getCityId() : nil
  }
  
  func getCollections() {
    self.presenter?.presentActivityIndicator(true)
    worker.getCollections { (data, error) in
      self.presenter?.presentActivityIndicator(false)
      if error == nil {
        guard let collections = data as? [Collection] else { return }
        self.presenter?.presentCollections(collections)
      } else {
        self.presenter?.presentError("Error", error!.localizedDescription)
      }
    }
  }
  
  
}
